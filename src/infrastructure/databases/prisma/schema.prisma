generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum GENDER {
    HORROR
    COMEDY
    ACTION
}

enum CLASSIFICATION {
    FREE
    TWELVE @map("12")

}

model Chair { // Maybe I should have indexes in the row and column
    row Int
    column Int

    room_id String
    chair_type_id String

    // room Room @relation(fields: [room_number, movie_theater_id], references: [number, movie_theater_id])
    // chairType ChairType @relation(fields: [chair_type_id], references: [id])

    @@id([row, column, room_id])
    @@map("chair")
}

model Technology {
    id String @id @default(uuid())
    name String
    percentageIncrease Float?

    // rooms RoomTechnology[]
    // movies Movie[]
    @@map("technology")
}

model Room {
    id String @id @default(uuid())
    number Int
    movie_theater_id String
    row_length Int
    column_length Int

    // movieTheater MovieTheater @relation(fields: [movie_theater_id], references: [id])
    // technologies RoomTechnology[]
    // chairs Chair[]
    @@map("room")
}

model RoomTechnology {
    technology_id String
    room_id String

    // technology Technology @relation(fields: [technology_id], references: [id])
    // room Room @relation(fields: [room_number, movie_theater_id], references: [number, movie_theater_id])

    @@id([technology_id, room_id])
    @@map("room_technology")
}

model MovieTheater {
    id String @id @default(uuid())
    number String
    complement String?
    zipCode String
    street String
    city String
    state String

    // chairTypes MovieTheaterChairType[]
    // rooms Room[]
    @@map("movie_theater")
}

model ChairType {
    id String @id @default(uuid())
    name String

    // movieTheaters MovieTheaterChairType[]
    // chairs Chair[]
    @@map("chair_type")
}

model MovieTheaterChairType {
    chair_type_id Int
    movie_theater_id String
    value Float?

    // chairType ChairType @relation(fields: [chair_type_id], references: [id])
    // movieTheater MovieTheater @relation(fields: [movie_theater_id], references: [id])
    
    @@id([chair_type_id, movie_theater_id])
    @@map("movie_theater_chair_type")
}

model Movie {
    id String @id @default(uuid())
    name String
    sinopsis String
    duration Int
    poster String
    gender GENDER[]
    classification CLASSIFICATION[]
    subtitled Boolean
    initial_date DateTime
    final_date DateTime

    // technologies Technology[]
    @@map("movie")
}

